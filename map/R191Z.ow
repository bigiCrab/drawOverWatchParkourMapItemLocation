設定
{
	主要
	{
		敘述: "Experimental Lava Parkour Temple of Anubis - Find Portal Keys and Collect  them to unlock heroes. Created by Postelik using Gemster312's Editor. Join our wonderful Discord! discord.me/lavaparkour. Map code: R191Z"
	}

	大廳
	{
		佇列中的玩家可進行: 是
		對戰結束後攻守互換: 否
		對戰語音聊天: 啟用
		玩家上限隊伍1人: 11
		玩家上限隊伍2人: 0
		觀戰人數上限: 12
		返回大廳: 從不
	}

	模式
	{
		團隊死鬥
		{
			啟用的地圖
			{
			}
		}

		衝突戰
		{
			啟用的地圖
			{
				阿努比斯神廟
			}
		}

		一般
		{
			允許更換英雄: 關閉
			治療包重生: 停用
			相同英雄限制: 關閉
			重生時間: 0%
			重生時隨機更換英雄: 開啟
			開始遊戲模式: 立刻
		}
	}

	英雄
	{
		一般
		{
			無限彈藥: 開啟

			D.Va
			{
				火箭匣艙: 關閉
				自爆（絕招）: 關閉
				重生時不搭乘機甲: 開啟
				防護力場: 關閉
			}

			半藏
			{
				僅限爆頭: 開啟
				暴風箭: 關閉
				突進跳躍冷卻時間: 30%
				造成的傷害: 10%
				音波箭: 關閉
				龍魂擊（絕招）: 關閉
			}

			壁壘機兵
			{
				切換模式: 關閉
				坦克模式（絕招）: 關閉
				無限彈藥: 開啟
				自我修復: 關閉
			}

			士兵76
			{
				戰術鎖定（絕招）: 關閉
				旋風火箭的冷卻時間: 25%
				生化力場: 關閉
			}

			奪命女
			{
				劇毒地雷: 關閉
				爪鉤的冷卻時間: 20%
				紅外線視野（絕招）: 關閉
			}

			安娜
			{
				奈米強化（絕招）: 關閉
				無限彈藥: 開啟
				生化手榴彈: 關閉
				睡眠鏢: 關閉
			}

			小美
			{
				冰牆: 關閉
				冰霜屏障的冷卻時間: 0%
				暴風雪（絕招）: 關閉
			}

			巴帝斯特
			{
				增幅矩陣（絕招）: 關閉
				無限彈藥: 開啟
				癒傷波動: 關閉
				維生力場: 關閉
			}

			席格馬
			{
				動能轉化: 關閉
				實驗屏障: 關閉
				重力崩引的冷卻時間: 25%
				重力流（絕招）: 關閉
			}

			慈悲
			{
				再生: 關閉
				女武神（絕招）: 關閉
				復活: 關閉
			}

			托比昂
			{
				僅限爆頭: 開啟
				可使用武器: 僅限鍛造鎚
				爐心超載在戰鬥時的絕招蓄力速度: 500%
				爐心超載的絕招自動蓄力速度: 500%
				爐心超載的絕招蓄力速度: 500%
				超負荷的冷卻時間: 50%
				造成的傷害: 10%
				部署砲塔: 關閉
			}

			攔路豬
			{
				吸了再上: 關閉
				火力全開（絕招）: 關閉
				鎖鍊鉤: 關閉
			}

			札莉雅
			{
				引力彈（絕招）: 關閉
				投射屏障: 關閉
				粒子屏障: 關閉
			}

			歐瑞莎
			{
				不准動！: 關閉
				增壓強化裝置（絕招）: 關閉
				強化防禦: 關閉
				防護屏障: 關閉
			}

			死神
			{
				亡靈形態的冷卻時間: 25%
				垂直跳躍速度: 105%
				幽影傳送: 關閉
				死亡綻放（絕招）: 關閉
			}

			毀滅拳王
			{
				僅限爆頭: 開啟
				天鉤拳擊退距離: 0%
				天鉤拳的冷卻時間: 75%
				流星墜（絕招）: 關閉
				火箭拳: 關閉
				火箭拳擊退距離: 0%
				無限彈藥: 開啟
				造成的傷害: 10%
				震地襲的冷卻時間: 15%
			}

			法拉
			{
				火箭彈幕（絕招）: 關閉
				無限彈藥: 開啟
				跳躍噴射的冷卻時間: 50%
				震盪爆破的冷卻時間: 50%
			}

			源氏
			{
				僅限爆頭: 開啟
				招架: 關閉
				無限彈藥: 開啟
				迅影襲: 關閉
				造成的傷害: 10%
				龍一文字（絕招）: 關閉
			}

			溫斯頓
			{
				屏障產生器: 關閉
				野性之怒（絕招）: 關閉
			}

			火爆鋼球
			{
				地雷陣（絕招）: 關閉
				垂直打樁機的冷卻時間: 50%
				穩固爪鉤的冷卻時間: 0%
				自動調整型護盾: 關閉
			}

			炸彈鼠
			{
				地獄飛輪（絕招）: 關閉
				生命值: 500%
				造成的傷害: 10%
				鋼鐵陷阱: 關閉
			}

			碧姬
			{
				修復包: 關閉
				全軍集結（絕招）: 關閉
				懲擊: 關閉
			}

			禪亞塔
			{
				超凡入聖（絕招）: 關閉
			}

			艾西
			{
				炸藥: 關閉
				無限彈藥: 開啟
				雙管散彈槍擊退距離（自己）: 65%
				雙管散彈槍的冷卻時間: 25%
				鮑伯（絕招）: 關閉
			}

			莫伊拉
			{
				消失的冷卻時間: 40%
				生化球: 關閉
				聚合光束（絕招）: 關閉
			}

			萊因哈特
			{
				地裂擊（絕招）: 關閉
				屏障力場: 關閉
				烈焰擊: 關閉
				衝鋒的冷卻時間: 35%
			}

			路西歐
			{
				僅限爆頭: 開啟
				無限彈藥: 開啟
				造成的傷害: 10%
				音波屏障（絕招）: 關閉
				音量全開的冷卻時間: 75%
			}

			辛梅塔
			{
				光子屏障（絕招）: 關閉
				哨戒塔: 關閉
			}

			迴音
			{
				聚能光束的冷卻時間: 0%
				複製（絕招）: 關閉
				飛空的冷卻時間: 0%
				黏性炸彈的冷卻時間: 0%
			}

			閃光
			{
				脈衝炸彈（絕招）: 關閉
				閃現的冷卻時間: 35%
			}

			駭影
			{
				匿蹤的冷卻時間: 25%
				相位轉換器的冷卻時間: 50%
				電磁脈衝波（絕招）: 關閉
				駭入: 關閉
			}

			麥卡利
			{
				彈無虛發（絕招）: 關閉
				閃光彈: 關閉
			}

			啟用的英雄
			{
				托比昂
			}
		}
	}

	extensions
	{
		Play More Effects
	}
}

變數
{
	全域:
		0: EditorVersion
		1: ShareCode
		2: Version
		3: Author
		4: MaxZones
		5: MaxHeroes
		6: HeroRoster
		7: LavaLocations
		8: LavaRadius
		9: CheckpointLocations
		10: ZoneLocations
		11: ZoneText
		12: PortalLocations
		13: PortalDestinations
		14: PortalUnlockDefaults
		15: PortalText
		16: HeroLocations
		17: UnlockLocations
		18: SpeedrunLocation
		19: BouncepadLocations
		20: BouncepadStrength
		21: EffectColors
		22: EffectBehaviors
		23: PlayerBehaviors
		24: SpawnFaceDirection
		25: MaxObjectIndex
		26: LoadingObjectIndex
		27: LoadingElementIndex
		28: InWorldText
		29: MatchTime
		30: AntiCrash
		34: PortalParts
		35: PortalHeros
		49: CustomPortalHero
		50: EasterEggLocations
		51: EasterEggHeroes
		52: visiblities

	玩家:
		0: Victory
		1: TutorialMode
		2: ZonesReached
		3: HeroesUnlocked
		4: ZoneCount
		5: HeroCount
		6: FoundSecretHero
		7: Respawn
		8: AlternativeRespawn
		9: SpeedRunMode
		10: Timer
		11: Deaths
		12: MyHUD
		13: CanDie
		14: LoopCounter
		15: PortalUnlocked
		16: PortalPartStatus
		17: PortalPartCounter
		25: EasterEggsFound
}

subroutines
{
	0: ResetProgress
	1: UpdateCount
	2: PortalOpen
}

規則("---------- INITIALIZATION ----------")
{
	事件
	{
		Ongoing - Global;
	}
}

規則("Global")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		停用 Disable Inspector Recording;
		Global.MatchTime = 60 * 180;
		Disable Built-In Game Mode Scoring;
		Disable Built-In Game Mode Completion;
		"Center HUD"
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("||        discord.me/lavaparkour        ||"), Top, -2, Color(
			White), Color(White), Color(Orange), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams),
			Current Array Element.Victory == True && Current Array Element.SpeedRunMode == False), String("已完成"), Null, Null, Top, 1,
			Color(Purple), Color(Purple), Color(Purple), Visible To and String, Default Visibility);
		停用 Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.TutorialMode == False), Null, Null, Custom String(
			"Hold [{0}] To Start Tutorial Mode", Input Binding String(Button(Reload))), Top, 2, Color(White), Color(White), Color(Yellow),
			Visible To and String, Default Visibility);
		停用 Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.TutorialMode == True), Custom String("TUTORIAL MODE"),
			Null, Null, Top, 2, Color(Yellow), Color(Yellow), Color(Yellow), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.TutorialMode == True), Null, Null, Custom String(
			"Press [{0}] to use portals/hero swaps\r\n       Hold [{1}] to place checkpoint\r\n                   Hold [{2}] for a tip",
			Input Binding String(Button(Interact)), Input Binding String(Button(Reload)), Input Binding String(Button(Melee))), Top, 3,
			Color(Yellow), Color(Yellow), Color(Yellow), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.TutorialMode == False), Null, Null, Custom String(
			"Press [{0}] To Respawn\r\n     Press [{1}] To Use", Input Binding String(Button(Ultimate)), Input Binding String(Button(
			Interact))), Top, 3, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Wait(1, Ignore Condition);
		"Left-Side HUD"
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.TutorialMode == False), Null, Custom String(
			"Hold [{0}] to restart", Input Binding String(Button(Ultimate))), Null, Left, 0, Color(White), Color(Purple), Color(White),
			Visible To and String, Default Visibility);
		停用 Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.TutorialMode == True), Null, Custom String(
			"Hold [{0}] to exit tutorial mode (resets progress)", Input Binding String(Button(Ultimate))), Null, Left, 0, Color(Yellow),
			Color(Yellow), Color(Yellow), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("PROGRESS:"), Null, Null, Left, 1, Color(Purple), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Wait(1, Ignore Condition);
		"Right-Side HUD"
		Create HUD Text(All Players(All Teams), Custom String("Share Code: {0} ", Global.ShareCode), Null, Null, Right, -3, Color(White),
			Color(White), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Created By: {0}", Global.Author), Right, -2, Color(White),
			Color(White), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("version {0}", Global.Version), Right, -1, Color(White), Color(
			White), Color(White), Visible To and String, Default Visibility);
		"Player Progress"
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Zones Reached\r\n{0}\r\nHeroes Unlocked\r\n{1}", Custom String(
			"{0} / {1}", Local Player.ZoneCount, Global.MaxZones), Custom String("{0} / {1}", Local Player.HeroCount, Global.MaxHeroes)),
			Left, 2, Color(Aqua), Color(Aqua), Color(Blue), Visible To and String, Default Visibility);
	}
}

規則("Player")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	動作
	{
		Event Player.CanDie = False;
		Start Forcing Player To Be Hero(Event Player, Global.HeroRoster[0]);
		While(Has Spawned(Event Player) == False);
			Wait(0.025, Ignore Condition);
		End;
		Disable Game Mode In-World UI(Event Player);
		Disable Game Mode HUD(Event Player);
		If(Global.PlayerBehaviors[0] == 1);
			Disable Movement Collision With Players(Event Player);
		Else If(Global.PlayerBehaviors[0] == 2);
			Set Status(Event Player, Null, Phased Out, 9999);
		End;
		Event Player.SpeedRunMode = False;
		Set Damage Dealt(Event Player, 0);
		Call Subroutine(ResetProgress);
		Wait(0.300, Ignore Condition);
		Set Objective Description(Event Player, Custom String("Find All Zones and Heroes"), String);
		Event Player.CanDie = True;
		Wait(2, Ignore Condition);
		Set Facing(Event Player, Global.SpawnFaceDirection, To World);
		Create HUD Text(Filtered Array(Event Player, Event Player.PortalPartCounter[4] >= 0), Null, Null, Custom String(
			"Reaper Portal Parts : {0}/3", Event Player.PortalPartCounter[4]), Left, 6, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(Event Player,
			Event Player.PortalPartCounter[0] >= 0 || Event Player.PortalPartCounter[1] >= 0 || Event Player.PortalPartCounter[2] >= 0 || Event Player.PortalPartCounter[3] >= 0),
			Null, Null, Custom String("D.va Portal Parts : {0}/3\r\nSoldier-76 Portal Parts : {1}/3\r\n{2}",
			Event Player.PortalPartCounter[0], Event Player.PortalPartCounter[1], Custom String(
			"Baptiste Portal Parts: {0}/3\r\nDoomfist Portal Parts: {1}/5", Event Player.PortalPartCounter[2],
			Event Player.PortalPartCounter[3])), Left, 5, Color(White), Color(White), Color(White), Visible To and String,
			Default Visibility);
	}
}

規則("----- DATA -----")
{
	事件
	{
		Ongoing - Global;
	}
}

規則("Release Information")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.ShareCode = Custom String("R191Z");
		Global.Version = Custom String("1.0.0");
		Global.Author = Custom String("Postelik");
		Global.EditorVersion = Custom String("Classic 1.2");
	}
}

規則("Goal Counts")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.MaxZones = 1;
		Global.MaxHeroes = 5;
	}
}

規則("Hero Roster")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Spawning Hero"
		Global.HeroRoster[0] = Hero(D.Va);
		"Unlockable Hero 1"
		Global.HeroRoster[1] = Hero(士兵76);
		"Unlockable Hero 2"
		Global.HeroRoster[2] = Hero(巴帝斯特);
		"Unlockable Hero 3"
		Global.HeroRoster[3] = Hero(毀滅拳王);
		"Unlockable Hero 4"
		Global.HeroRoster[4] = Hero(死神);
		"Secret Hero - White"
		Global.HeroRoster[5] = Hero(托比昂);
	}
}

規則("Lava Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.LavaLocations = Array(Vector(-4.547, -30.813, 98.599), Vector(-8.373, 5.813, 100.763), Vector(-11.227, -25.487, 89.495),
			Vector(-1.560, 0.252, 108.267), Vector(-17.576, 6.303, 92.776), Vector(-24.982, -0.542, 85.635), Vector(-22.272, -4.103,
			98.595), Vector(-23.815, 5.365, 99.982), Vector(4.815, -7.119, 86.187), Vector(15.449, -0.888, 96.947), Vector(15.006, 1.219,
			88.706), Vector(-17.989, -7.688, 111.077), Vector(-13.520, 11.292, 107.846), Vector(-25.937, 4.503, 113.510), Vector(-32.218,
			-17.601, 108.125), Vector(-29.588, -9.358, 122.550), Vector(-47.724, -41.689, 41.739), Vector(-34.811, 3.782, 46.757), Vector(
			-25.239, -6.326, 44.604), Vector(-40.673, 2.309, 61.669), Vector(-33.184, 11.946, 54.074), Vector(-23.538, -44.318, 66.995),
			Vector(-14.098, -0.312, 51.345), Vector(-10.787, 9.428, 53.690), Vector(-4.677, 20.945, 45.761), Vector(-54.047, 0.807,
			47.048), Vector(-24.483, -4.614, 59.216), Vector(-3.865, 1.558, 56.900), Vector(5.932, 6.260, 59.214), Vector(-12.695, -30.244,
			71.804), Vector(-28.630, 2.223, 74.275), Vector(-25.806, 8.694, 66.893), Vector(-14.837, 9.233, 53.079), Vector(-13.294,
			12.314, 57.673), Vector(8.484, -12.601, 67.693), Vector(-6.750, 5.132, 68.814), Vector(-31.891, -26.163, 28.813), Vector(
			-53.867, 10.609, 31.919), Vector(-32.863, -6.734, 16.175), Vector(-31.695, 4.609, 28.450), Vector(-19.031, -20.622, 37.111),
			Vector(-9.459, 3.163, 42.372), Vector(-2.077, 2.698, 39.944), Vector(1.929, -12.413, 31.099), Vector(0, 0, 0), Vector(-6.262,
			-8.393, 24.119), Vector(-0.231, -9.757, 21.435), Vector(-41.779, 11.836, 14.553), Vector(-44.946, 3.909, 21.394), Vector(
			-45.837, 6.379, 9.957), Vector(-40.479, 7.283, 3.975), Vector(-41.762, 6.600, 16.808), Vector(-40.730, 10.321, 24.238), Vector(
			-47.706, 5.115, 27.924), Vector(5.378, -6.049, 79.721), Vector(13.232, -21.171, 14.192), Vector(16.770, -29.051, -2.350),
			Vector(3.153, 5.751, -20.065), Vector(-0.744, -34.492, -20.465), Vector(-27.492, -20.580, -0.013), Vector(-4.621, -6.436,
			7.062), Vector(-18.006, -31.843, -19.193), Vector(-27.641, -35.836, -38.668), Vector(-8.566, -3.496, -15.444), Vector(-12.075,
			3.414, 16.015), Vector(33.895, -6.162, -25.365), Vector(26.410, 2.852, -37.586), Vector(-16.845, -13.265, 129.978), Vector(
			-9.031, -32.759, 143.946), Vector(-4.462, 7.714, 131.746), Vector(-8.629, -14.736, 112.332), Vector(5.357, 7.835, 113.564),
			Vector(14.909, -8.549, 109.618), Vector(10.094, 7.419, 113.287), Vector(14.374, 2.494, 121.827), Vector(5.365, 1.853, 129.745),
			Vector(-65.755, -23.782, 98.581), Vector(-52.421, -41.099, 98.236), Vector(-46.944, -7.576, 124.127), Vector(-42.052, 8.980,
			93.597), Vector(-58.820, 20.927, 80.085), Vector(-47.724, 12.506, 20.247), Vector(11.241, 0.072, 2.002), Vector(-53.328,
			14.204, 66.615), Vector(-1.432, 8.064, 15.046), Vector(-39.788, 18.439, 137.253), Vector(28.126, 4.106, -20.485), Vector(0, 0,
			0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0),
			Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(
			0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0,
			0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0),
			Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(
			0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0,
			0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0),
			Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(
			0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0,
			0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0));
	}
}

規則("Lava Radius")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.LavaRadius = Array(34.500, 6.100, 31.800, 8.200, 3.400, 11.300, 11, 2.900, 11.200, 7.300, 2.400, 15.200, 3.600, 3.300,
			23.500, 17.700, 47.300, 8.300, 15.600, 3.700, 4.100, 49, 9.300, 3.500, 11.700, 5.800, 13.300, 4.800, 2.800, 37.300, 5.200,
			3.500, 2.400, 3.800, 20.500, 3.200, 32, 5.500, 12.900, 4.300, 26.700, 3.700, 3.100, 14.700, 0, 10.200, 11.700, 2.800, 7.700,
			4.300, 6.100, 4.900, 2.900, 6.100, 11, 27.900, 32.700, 3.800, 36.800, 27.400, 13, 35.200, 39, 8.300, 8.100, 9.200, 12.600,
			20.800, 38.900, 4.700, 21.900, 4.300, 15.800, 3.900, 6.600, 5.400, 33.400, 50, 19.300, 6.800, 13.900, 4, 4.200, 5.800, 3.900,
			12.200, 5.400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
	}
}

規則("Checkpoint Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.CheckpointLocations = Array(Vector(-9.589, 14.416, 81.213), Vector(-11.386, 11.955, 15.397), Vector(0, 0, 0), Vector(0, 0,
			0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0));
	}
}

規則("Zone Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.ZoneLocations = Array(Vector(1.580, 7.290, 103.644), Vector(-59.790, 1.580, 59.417), Vector(0, 0, 0), Vector(0, 0, 0),
			Vector(0, 0, 0));
	}
}

規則("Zone Text")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Spawn - Cannot Edit"
		Global.ZoneText[0] = Null;
		"Zone 1"
		Global.ZoneText[1] = Custom String("Secret place");
		"Zone 2"
		Global.ZoneText[2] = Custom String("Zone 2");
		"Zone 3"
		Global.ZoneText[3] = Custom String("Zone 3");
		"Zone 4"
		Global.ZoneText[4] = Custom String("Zone 4");
	}
}

規則("Portal Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.PortalLocations = Array(Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0,
			0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(-64.070, 2.880, 57.708), Vector(-67.344, 2.880, 53.808), Vector(0, 0, 0), Vector(
			-41.568, 2.800, 71.267), Vector(-53.195, 6.970, 74.237), Vector(-30.056, 11.222, 122.485), Vector(-51.427, 10.809, 24.278),
			Vector(-3.856, 3.809, 49.898));
	}
}

規則("Portal Destinations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.PortalDestinations = Array(Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0,
			0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(-9.520, 14.416, 81.149), Vector(-11.418, 11.956, 15.318), Vector(0, 0, 0), Vector(
			-59.811, 1.580, 59.406), Vector(-31.800, 10.376, 8.677), Vector(-59.517, 6.521, 44.097), Vector(18.594, 12.281, 11.615),
			Vector(7.177, 8.507, 67.964));
	}
}

規則("Portal Unlock Defaults")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"True = Usable from Start | False = Locked until destination is reached"
		Global.PortalUnlockDefaults[0] = False;
		Global.PortalUnlockDefaults[1] = False;
		Global.PortalUnlockDefaults[2] = False;
		Global.PortalUnlockDefaults[3] = False;
		Global.PortalUnlockDefaults[4] = False;
		Global.PortalUnlockDefaults[5] = False;
		Global.PortalUnlockDefaults[6] = False;
		Global.PortalUnlockDefaults[7] = False;
		Global.PortalUnlockDefaults[8] = True;
		Global.PortalUnlockDefaults[9] = True;
		Global.PortalUnlockDefaults[10] = False;
		Global.PortalUnlockDefaults[11] = False;
		Global.PortalUnlockDefaults[12] = False;
		Global.PortalUnlockDefaults[13] = False;
		Global.PortalUnlockDefaults[14] = False;
		Global.PortalUnlockDefaults[15] = False;
	}
}

規則("Portal Text")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.PortalText[0] = Custom String("");
		Global.PortalText[1] = Custom String("");
		Global.PortalText[2] = Custom String("");
		Global.PortalText[3] = Custom String("");
		Global.PortalText[4] = Custom String("");
		Global.PortalText[5] = Custom String("");
		Global.PortalText[6] = Custom String("");
		Global.PortalText[7] = Custom String("");
		Global.PortalText[8] = Custom String("Zone 1");
		Global.PortalText[9] = Custom String("Zone 2");
		Global.PortalText[10] = Custom String("");
		Global.PortalText[11] = Custom String("Finish");
		Global.PortalText[12] = Custom String("");
		Global.PortalText[13] = Custom String("");
		Global.PortalText[14] = Custom String("");
		Global.PortalText[15] = Custom String("");
	}
}

規則("Hero Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.HeroLocations = Array(Vector(-63.373, 2.880, 63.689), Vector(-65.137, 2.880, 61.590), Vector(-67.082, 2.880, 59.669),
			Vector(-69.260, 2.880, 57.537), Vector(-71.276, 2.880, 55.101), Vector(10.551, 4.156, 37.434));
	}
}

規則("Unlock Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		停用 Global.UnlockLocations = Array(Vector(-59.477, 7.309, 44.152), Vector(18.596, 13.081, 11.687), Vector(7.221, 9.307, 67.741),
			Vector(-31.743, 11.172, 8.870));
		Global.UnlockLocations = Array(Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0));
	}
}

規則("Speedrun Location")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.SpeedrunLocation = Array(Vector(-0.710, 8.663, 104.032));
	}
}

規則("Bouncepad Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.BouncepadLocations = Array(Vector(-9.858, 6.097, 93.328), Vector(-24.875, 10.771, 85.946), Vector(-34.115, 6.440, 114.486),
			Vector(-42.701, 8.151, 50.975), Vector(6.817, 5.789, -13.623), Vector(-18.659, 6.078, -42.791), Vector(-22.289, 5.758, -9.125),
			Vector(-0.773, 0.976, 13.820), Vector(4.347, -0.407, 1.151), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0,
			0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0), Vector(0, 0, 0));
	}
}

規則("Bouncepad Strengths")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.BouncepadStrength = Array(6, 10, 8, 7, 5, 10, 10, 13.500, 18, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10);
	}
}

規則("Effect Colors")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Lava"
		Global.EffectColors[0] = Color(Red);
		"Checkpoints"
		Global.EffectColors[1] = Color(White);
		"Zones"
		Global.EffectColors[2] = Color(White);
		"Portals"
		Global.EffectColors[3] = Color(White);
		"Bouncepads"
		Global.EffectColors[4] = Color(Green);
		"Starting Hero"
		Global.EffectColors[5] = Color(Yellow);
		"Unlockable Hero 1"
		Global.EffectColors[6] = Color(Green);
		"Unlockable Hero 2"
		Global.EffectColors[7] = Color(Blue);
		"Unlockable Hero 3"
		Global.EffectColors[8] = Color(Purple);
		"Unlockable Hero 4"
		Global.EffectColors[9] = Color(Red);
		"Secret Hero"
		Global.EffectColors[10] = Color(White);
	}
}

規則("Effect Behaviors")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Portals are visible when locked"
		Global.EffectBehaviors[0] = True;
	}
}

規則("Player Behaviors")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Player Phasing\r\n0 = Players can collide with other players and explosions.\r\n1 = Players cannot collide with other players but can interact with explosions.\r\n2 = Players cannot collide with other players nor explosions."
		Global.PlayerBehaviors[0] = 1;
	}
}

規則("Spawn Face Direction")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"First time spawn direction"
		Global.SpawnFaceDirection = Vector(1000, 0, 0);
	}
}

規則("---------- EXTRA DATA ----------")
{
	事件
	{
		Ongoing - Global;
	}
}

規則("In World Text Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"\"Heroes\" Text"
		Global.InWorldText[0] = Vector(0, 0, 0);
	}
}

停用 規則("Tutorial Mode Tip Messages")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.TutorialMode == True;
		Is Button Held(Event Player, Button(Melee)) == True;
	}

	動作
	{
		Wait(0.500, Abort When False);
		Small Message(Event Player, Custom String("Tips have not been set up on this map."));
		Abort;
		停用 If(Event Player.ZonesReached[0] == False);
		停用 Small Message(Event Player, Custom String("Tip: Use {0} to reach the Starting Zone", Hero Icon String(Hero(源氏))));
		停用 Else If(Event Player.ZonesReached[1] == False);
		停用 Small Message(Event Player, Custom String("Tip: Use {0} to reach the Capture Zone", Hero Icon String(Hero(源氏))));
		停用 Else If(Event Player.HeroesUnlocked[0] == False);
		停用 Small Message(Event Player, Custom String("Tip: Find {0} near capture zone", Hero Icon String(Hero(巴帝斯特))));
		停用 Else If(Event Player.HeroesUnlocked[1] == False);
		停用 Small Message(Event Player, Custom String("Tip: Find {0} between capture zone and escort zone", Hero Icon String(Hero(毀滅拳王))));
		停用 Else If(Event Player.ZonesReached[2] == False);
		停用 Small Message(Event Player, Custom String("Tip: Use {0} to reach Escort Zone", Hero Icon String(Hero(毀滅拳王))));
		停用 Else If(Event Player.HeroesUnlocked[2] == False);
		停用 Small Message(Event Player, Custom String("Tip: Find {0} between escort zone and final zone", Hero Icon String(Hero(路西歐))));
		停用 Else If(Event Player.ZonesReached[3] == False);
		停用 Small Message(Event Player, Custom String("Tip: Use {0} to reach Final Zone", Hero Icon String(Hero(路西歐))));
		停用 Else If(Event Player.HeroesUnlocked[3] == False);
		停用 Small Message(Event Player, Custom String("Tip: Use {0} to reach {1} near final zone", Hero Icon String(Hero(巴帝斯特)),
			Hero Icon String(Hero(駭影))));
		停用 Else If(Event Player.FoundSecretHero == False);
		停用 Small Message(Event Player, Custom String("Tip: Find the secret character hidden somewhere in this map!"));
		停用 Else;
		停用 Small Message(Event Player, Custom String("Tip: Join discord.me/lavaparkour for more maps!"));
		停用 End;
	}
}

規則("---------- EFFECTS ----------")
{
	事件
	{
		Ongoing - Global;
	}
}

規則("Loading Data")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Get Max Objective Index Values"
		If(Global.MaxObjectIndex == Null);
			Wait(0.500, Ignore Condition);
			"Lava Max"
			Global.MaxObjectIndex[0] = Count Of(Global.LavaLocations) - 1;
			"Checkpoint Max"
			Global.MaxObjectIndex[1] = Count Of(Global.CheckpointLocations) - 1;
			"Zone Max"
			Global.MaxObjectIndex[2] = Count Of(Global.ZoneLocations) - 1;
			"Portals Max"
			Global.MaxObjectIndex[3] = Count Of(Global.PortalLocations) - 1;
			"Heroes Max"
			Global.MaxObjectIndex[4] = Count Of(Global.HeroLocations) - 1;
			"Unlocks Max"
			Global.MaxObjectIndex[5] = Count Of(Global.UnlockLocations) - 1;
			"Speedrun Max"
			Global.MaxObjectIndex[6] = 0;
			"Bouncepads Max"
			Global.MaxObjectIndex[7] = Count Of(Global.BouncepadLocations) - 1;
			Global.MaxObjectIndex[8] = Count Of(Global.PortalParts) - 1;
		End;
		"Move to next Object Type if end index reached"
		If(Global.LoadingElementIndex > Global.MaxObjectIndex[Global.LoadingObjectIndex]);
			Global.LoadingObjectIndex += 1;
			Global.LoadingElementIndex = 0;
		End;
		"Load Lava"
		If(Global.LoadingObjectIndex == 0);
			If(Global.LoadingElementIndex == 0);
				Global.LavaLocations = Filtered Array(Global.LavaLocations, Current Array Element != Null && Current Array Element != Vector(0, 0,
					0));
				Global.LavaRadius = Filtered Array(Global.LavaRadius, Current Array Element != Null && Current Array Element != 0);
			End;
			Create Effect(All Players(All Teams), Sphere, Global.EffectColors[0], Global.LavaLocations[Global.LoadingElementIndex],
				Global.LavaRadius[Global.LoadingElementIndex], Visible To);
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Checkpoints"
		Else If(Global.LoadingObjectIndex == 1);
			If(Global.CheckpointLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.CheckpointLocations[Global.LoadingElementIndex] != Null);
				Create Effect(All Players(Team 2), Light Shaft, Global.EffectColors[1], Global.CheckpointLocations[Global.LoadingElementIndex], 1,
					Visible To Position Radius and Color);
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Zones"
		Else If(Global.LoadingObjectIndex == 2);
			If(Global.ZoneLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.ZoneLocations[Global.LoadingElementIndex] != Null);
				"Zones"
				If(Global.LoadingElementIndex > 0);
					Create In-World Text(All Players(All Teams), Global.ZoneText[Global.LoadingElementIndex],
						Global.ZoneLocations[Global.LoadingElementIndex] + Vector(0, 3, 0), 3, Clip Against Surfaces, Visible To, Color(White),
						Default Visibility);
					Wait(0.030, Ignore Condition);
					Create Effect(All Players(All Teams), Light Shaft, Global.EffectColors[2], Global.ZoneLocations[Global.LoadingElementIndex], 2,
						Visible To);
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Portals"
		Else If(Global.LoadingObjectIndex == 3);
			If(Global.PortalLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.PortalLocations[Global.LoadingElementIndex] != Null);
				If(Global.EffectBehaviors[0] == False);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(
						Global.LoadingElementIndex)] == True), Global.PortalText[Evaluate Once(Global.LoadingElementIndex)],
						Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1.500, Clip Against Surfaces, Visible To, Color(White),
						Default Visibility);
					Wait(0.030, Ignore Condition);
					Create Effect(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(Global.LoadingElementIndex)
						] == True), Good Aura, Global.EffectColors[3], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1,
						Visible To);
				Else;
					If(Global.LoadingElementIndex == 13);
						Create In-World Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.PortalHeros[0]),
							Global.PortalText[Evaluate Once(Global.LoadingElementIndex)], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)
							], 1.500, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
						Wait(0.030, Ignore Condition);
						Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(
							Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[0]), Custom String(
							"L O C K E D"), Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)] + Vector(0, -0.500, 0), 1.250,
							Clip Against Surfaces, Visible To, Color(Orange), Default Visibility);
						Wait(0.030, Ignore Condition);
						Create Effect(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.PortalHeros[0]), Good Aura,
							Global.EffectColors[3], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1, Visible To);
					Else If(Global.LoadingElementIndex == 14);
						Create In-World Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.PortalHeros[1]),
							Global.PortalText[Evaluate Once(Global.LoadingElementIndex)], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)
							], 1.500, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
						Wait(0.030, Ignore Condition);
						Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(
							Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[1]), Custom String(
							"L O C K E D"), Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)] + Vector(0, -0.500, 0), 1.250,
							Clip Against Surfaces, Visible To, Color(Orange), Default Visibility);
						Wait(0.030, Ignore Condition);
						Create Effect(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.PortalHeros[1]), Good Aura,
							Global.EffectColors[3], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1, Visible To);
					Else If(Global.LoadingElementIndex == 15);
						Create In-World Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.PortalHeros[2]),
							Global.PortalText[Evaluate Once(Global.LoadingElementIndex)], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)
							], 1.500, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
						Wait(0.030, Ignore Condition);
						Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(
							Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[2]), Custom String(
							"L O C K E D"), Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)] + Vector(0, -0.500, 0), 1.250,
							Clip Against Surfaces, Visible To, Color(Orange), Default Visibility);
						Wait(0.030, Ignore Condition);
						Create Effect(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.PortalHeros[2]), Good Aura,
							Global.EffectColors[3], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1, Visible To);
					Else If(Global.LoadingElementIndex == 16);
						Create In-World Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.PortalHeros[3]),
							Global.PortalText[Evaluate Once(Global.LoadingElementIndex)], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)
							], 1.500, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
						Wait(0.030, Ignore Condition);
						Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(
							Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[3]), Custom String(
							"L O C K E D"), Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)] + Vector(0, -0.500, 0), 1.250,
							Clip Against Surfaces, Visible To, Color(Orange), Default Visibility);
						Wait(0.030, Ignore Condition);
						Create Effect(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.PortalHeros[3]), Good Aura,
							Global.EffectColors[3], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1, Visible To);
					Else;
						Create In-World Text(All Players(All Teams), Global.PortalText[Evaluate Once(Global.LoadingElementIndex)],
							Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1.500, Clip Against Surfaces, Visible To, Color(White),
							Default Visibility);
						Wait(0.030, Ignore Condition);
						Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(
							Global.LoadingElementIndex)] == False), Custom String("L O C K E D"), Global.PortalLocations[Evaluate Once(
							Global.LoadingElementIndex)] + Vector(0, -0.500, 0), 1.250, Clip Against Surfaces, Visible To, Color(Orange),
							Default Visibility);
						Wait(0.030, Ignore Condition);
						Create Effect(All Players(All Teams), Good Aura, Global.EffectColors[3], Global.PortalLocations[Evaluate Once(
							Global.LoadingElementIndex)], 1, Visible To);
					End;
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Heroes"
		Else If(Global.LoadingObjectIndex == 4);
			If(Global.HeroLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.HeroLocations[Global.LoadingElementIndex] != Null);
				Wait(0.030, Ignore Condition);
				If(Global.LoadingElementIndex == 0);
					Create In-World Text(All Players(All Teams), Hero Icon String(Global.HeroRoster[0]), Global.HeroLocations[0], 2,
						Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[5], Global.HeroLocations[0], 1, Visible To);
				Else If(Global.LoadingElementIndex == 1);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[0] == True), Hero Icon String(
						Global.HeroRoster[1]), Global.HeroLocations[1], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[0] == False), Custom String(
						"{0} - {1}", Hero Icon String(Global.HeroRoster[1]), String("受到鎖定")), Global.HeroLocations[1], 2, Clip Against Surfaces,
						Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[6], Global.HeroLocations[1], 1, Visible To);
				Else If(Global.LoadingElementIndex == 2);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[1] == True), Hero Icon String(
						Global.HeroRoster[2]), Global.HeroLocations[2], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[1] == False), Custom String(
						"{0} - {1}", Hero Icon String(Global.HeroRoster[2]), String("受到鎖定")), Global.HeroLocations[2], 2, Clip Against Surfaces,
						Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[7], Global.HeroLocations[2], 1, Visible To);
				Else If(Global.LoadingElementIndex == 3);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[2] == True), Hero Icon String(
						Global.HeroRoster[3]), Global.HeroLocations[3], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[2] == False), Custom String(
						"{0} - {1}", Hero Icon String(Global.HeroRoster[3]), String("受到鎖定")), Global.HeroLocations[3], 2, Clip Against Surfaces,
						Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[8], Global.HeroLocations[3], 1, Visible To);
				Else If(Global.LoadingElementIndex == 4);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[3] == True), Hero Icon String(
						Global.HeroRoster[4]), Global.HeroLocations[4], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[3] == False), Custom String(
						"{0} - {1}", Hero Icon String(Global.HeroRoster[4]), String("受到鎖定")), Global.HeroLocations[4], 2, Clip Against Surfaces,
						Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[9], Global.HeroLocations[4], 1, Visible To);
				Else If(Global.LoadingElementIndex == 5);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[10], Global.HeroLocations[5], 1, Visible To);
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Unlocks"
		Else If(Global.LoadingObjectIndex == 5);
			If(Global.UnlockLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.UnlockLocations[Global.LoadingElementIndex] != Null);
				Create In-World Text(All Players(All Teams), Hero Icon String(Global.HeroRoster[Global.LoadingElementIndex + 1]),
					Global.UnlockLocations[Global.LoadingElementIndex], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
				Wait(0.030, Ignore Condition);
				If(Global.LoadingElementIndex == 0);
					Create Effect(All Players(All Teams), Sparkles, Global.EffectColors[6], Global.UnlockLocations[0], 1, Visible To);
				Else If(Global.LoadingElementIndex == 1);
					Create Effect(All Players(All Teams), Sparkles, Global.EffectColors[7], Global.UnlockLocations[1], 1, Visible To);
				Else If(Global.LoadingElementIndex == 2);
					Create Effect(All Players(All Teams), Sparkles, Global.EffectColors[8], Global.UnlockLocations[2], 1, Visible To);
				Else If(Global.LoadingElementIndex == 3);
					Create Effect(All Players(All Teams), Sparkles, Global.EffectColors[9], Global.UnlockLocations[3], 1, Visible To);
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Speedrun"
		Else If(Global.LoadingObjectIndex == 6);
			If(Global.SpeedrunLocation != Vector(0, 0, 0) && Global.SpeedrunLocation != Null);
				Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == False), Custom String(
					"Speedrun Mode"), Global.SpeedrunLocation, 1, Clip Against Surfaces, Visible To, Color(Red), Default Visibility);
				Wait(0.030, Ignore Condition);
				Create Effect(Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == False), Good Aura, Color(Red),
					Global.SpeedrunLocation, 1, Visible To);
				Wait(0.030, Ignore Condition);
				Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == True), Custom String(
					"Speedrun Mode"), Global.SpeedrunLocation, 1, Clip Against Surfaces, Visible To, Color(Green), Default Visibility);
				Wait(0.030, Ignore Condition);
				Create Effect(Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == True), Good Aura, Color(Green),
					Global.SpeedrunLocation, 1, Visible To);
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Bouncepads"
		Else If(Global.LoadingObjectIndex == 7);
			If(Global.BouncepadLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.BouncepadLocations[Global.LoadingElementIndex] != Null);
				Create Effect(All Players(All Teams), Orb, Global.EffectColors[4], Global.BouncepadLocations[Global.LoadingElementIndex], 1,
					Visible To);
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		Else If(Global.LoadingObjectIndex == 8);
			If(Global.PortalParts[Global.LoadingElementIndex] != Vector(0, 0, 0) && Global.PortalParts[Global.LoadingElementIndex] != Null);
				If(Global.LoadingElementIndex >= 0 && Global.LoadingElementIndex <= 2);
					Create Effect(Filtered Array(All Players(All Teams), Current Array Element.PortalPartStatus[Evaluate Once(
						Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[0]), Sparkles,
						Global.EffectColors[4], Global.PortalParts[Global.LoadingElementIndex], 1, Visible To);
				Else If(Global.LoadingElementIndex >= 3 && Global.LoadingElementIndex <= 5);
					Create Effect(Filtered Array(All Players(All Teams), Current Array Element.PortalPartStatus[Evaluate Once(
						Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[1]), Sparkles,
						Global.EffectColors[4], Global.PortalParts[Global.LoadingElementIndex], 1, Visible To);
				Else If(Global.LoadingElementIndex >= 6 && Global.LoadingElementIndex <= 8);
					Create Effect(Filtered Array(All Players(All Teams), Current Array Element.PortalPartStatus[Evaluate Once(
						Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[2]), Sparkles,
						Global.EffectColors[4], Global.PortalParts[Global.LoadingElementIndex], 1, Visible To);
				Else If(Global.LoadingElementIndex >= 9 && Global.LoadingElementIndex <= 13);
					Create Effect(Filtered Array(All Players(All Teams), Current Array Element.PortalPartStatus[Evaluate Once(
						Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[3]), Sparkles,
						Global.EffectColors[4], Global.PortalParts[Global.LoadingElementIndex], 1, Visible To);
				Else If(Global.LoadingElementIndex >= 14 && Global.LoadingElementIndex <= 16);
					Create Effect(Filtered Array(All Players(All Teams), Current Array Element.PortalPartStatus[Evaluate Once(
						Global.LoadingElementIndex)] == False && Hero Of(Current Array Element) == Global.PortalHeros[4]), Sparkles,
						Global.EffectColors[4], Global.PortalParts[Global.LoadingElementIndex], 1, Visible To);
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		End;
	}
}

停用 規則("Loading Data")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Get Max Objective Index Values"
		If(Global.MaxObjectIndex == Null);
			Wait(0.500, Ignore Condition);
			"Lava Max"
			Global.MaxObjectIndex[0] = Count Of(Global.LavaLocations) - 1;
			"Checkpoint Max"
			Global.MaxObjectIndex[1] = Count Of(Global.CheckpointLocations) - 1;
			"Zone Max"
			Global.MaxObjectIndex[2] = Count Of(Global.ZoneLocations) - 1;
			"Portals Max"
			Global.MaxObjectIndex[3] = Count Of(Global.PortalLocations) - 1;
			"Heroes Max"
			Global.MaxObjectIndex[4] = Count Of(Global.HeroLocations) - 1;
			"Unlocks Max"
			Global.MaxObjectIndex[5] = Count Of(Global.UnlockLocations) - 1;
			"Speedrun Max"
			Global.MaxObjectIndex[6] = 0;
			"Bouncepads Max"
			Global.MaxObjectIndex[7] = Count Of(Global.BouncepadLocations) - 1;
		End;
		"Move to next Object Type if end index reached"
		If(Global.LoadingElementIndex > Global.MaxObjectIndex[Global.LoadingObjectIndex]);
			Global.LoadingObjectIndex += 1;
			Global.LoadingElementIndex = 0;
		End;
		"Load Lava"
		If(Global.LoadingObjectIndex == 0);
			If(Global.LoadingElementIndex == 0);
				Global.LavaLocations = Filtered Array(Global.LavaLocations, Current Array Element != Null && Current Array Element != Vector(0, 0,
					0));
				Global.LavaRadius = Filtered Array(Global.LavaRadius, Current Array Element != Null && Current Array Element != 0);
			End;
			Create Effect(All Players(All Teams), Sphere, Global.EffectColors[0], Global.LavaLocations[Global.LoadingElementIndex],
				Global.LavaRadius[Global.LoadingElementIndex], Visible To);
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Checkpoints"
		Else If(Global.LoadingObjectIndex == 1);
			If(Global.CheckpointLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.CheckpointLocations[Global.LoadingElementIndex] != Null);
				Create Effect(All Players(All Teams), Light Shaft, Global.EffectColors[1], Global.CheckpointLocations[Global.LoadingElementIndex],
					1, Visible To);
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Zones"
		Else If(Global.LoadingObjectIndex == 2);
			If(Global.ZoneLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.ZoneLocations[Global.LoadingElementIndex] != Null);
				"Zones"
				If(Global.LoadingElementIndex > 0);
					Create In-World Text(All Players(All Teams), Global.ZoneText[Global.LoadingElementIndex],
						Global.ZoneLocations[Global.LoadingElementIndex] + Vector(0, 3, 0), 3, Clip Against Surfaces, Visible To, Color(White),
						Default Visibility);
					Wait(0.030, Ignore Condition);
					Create Effect(All Players(All Teams), Light Shaft, Global.EffectColors[2], Global.ZoneLocations[Global.LoadingElementIndex], 2,
						Visible To);
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Portals"
		Else If(Global.LoadingObjectIndex == 3);
			If(Global.PortalLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.PortalLocations[Global.LoadingElementIndex] != Null);
				If(Global.EffectBehaviors[0] == False);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(
						Global.LoadingElementIndex)] == True), Global.PortalText[Evaluate Once(Global.LoadingElementIndex)],
						Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1.500, Clip Against Surfaces, Visible To, Color(White),
						Default Visibility);
					Wait(0.030, Ignore Condition);
					Create Effect(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(Global.LoadingElementIndex)
						] == True), Good Aura, Global.EffectColors[3], Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1,
						Visible To);
				Else;
					Create In-World Text(All Players(All Teams), Global.PortalText[Evaluate Once(Global.LoadingElementIndex)],
						Global.PortalLocations[Evaluate Once(Global.LoadingElementIndex)], 1.500, Clip Against Surfaces, Visible To, Color(White),
						Default Visibility);
					Wait(0.030, Ignore Condition);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.PortalUnlocked[Evaluate Once(
						Global.LoadingElementIndex)] == False), Custom String("L O C K E D"), Global.PortalLocations[Evaluate Once(
						Global.LoadingElementIndex)] + Vector(0, -0.500, 0), 1.250, Clip Against Surfaces, Visible To, Color(Orange),
						Default Visibility);
					Wait(0.030, Ignore Condition);
					Create Effect(All Players(All Teams), Good Aura, Global.EffectColors[3], Global.PortalLocations[Evaluate Once(
						Global.LoadingElementIndex)], 1, Visible To);
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Heroes"
		Else If(Global.LoadingObjectIndex == 4);
			If(Global.HeroLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.HeroLocations[Global.LoadingElementIndex] != Null);
				Wait(0.030, Ignore Condition);
				If(Global.LoadingElementIndex == 0);
					Create In-World Text(All Players(All Teams), Hero Icon String(Global.HeroRoster[0]), Global.HeroLocations[0], 2,
						Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[5], Global.HeroLocations[0], 1, Visible To);
				Else If(Global.LoadingElementIndex == 1);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[0] == True), Hero Icon String(
						Global.HeroRoster[1]), Global.HeroLocations[1], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[0] == False), Custom String(
						"{0} - {1}", Hero Icon String(Global.HeroRoster[1]), String("受到鎖定")), Global.HeroLocations[1], 2, Clip Against Surfaces,
						Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[6], Global.HeroLocations[1], 1, Visible To);
				Else If(Global.LoadingElementIndex == 2);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[1] == True), Hero Icon String(
						Global.HeroRoster[2]), Global.HeroLocations[2], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[1] == False), Custom String(
						"{0} - {1}", Hero Icon String(Global.HeroRoster[2]), String("受到鎖定")), Global.HeroLocations[2], 2, Clip Against Surfaces,
						Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[7], Global.HeroLocations[2], 1, Visible To);
				Else If(Global.LoadingElementIndex == 3);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[2] == True), Hero Icon String(
						Global.HeroRoster[3]), Global.HeroLocations[3], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[2] == False), Custom String(
						"{0} - {1}", Hero Icon String(Global.HeroRoster[3]), String("受到鎖定")), Global.HeroLocations[3], 2, Clip Against Surfaces,
						Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[8], Global.HeroLocations[3], 1, Visible To);
				Else If(Global.LoadingElementIndex == 4);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[3] == True), Hero Icon String(
						Global.HeroRoster[4]), Global.HeroLocations[4], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
					Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[3] == False), Custom String(
						"{0} - {1}", Hero Icon String(Global.HeroRoster[4]), String("受到鎖定")), Global.HeroLocations[4], 2, Clip Against Surfaces,
						Visible To, Color(White), Default Visibility);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[9], Global.HeroLocations[4], 1, Visible To);
				Else If(Global.LoadingElementIndex == 5);
					Create Effect(All Players(All Teams), Bad Aura, Global.EffectColors[10], Global.HeroLocations[5], 1, Visible To);
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Unlocks"
		Else If(Global.LoadingObjectIndex == 5);
			If(Global.UnlockLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.UnlockLocations[Global.LoadingElementIndex] != Null);
				Create In-World Text(All Players(All Teams), Hero Icon String(Global.HeroRoster[Global.LoadingElementIndex + 1]),
					Global.UnlockLocations[Global.LoadingElementIndex], 2, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
				Wait(0.030, Ignore Condition);
				If(Global.LoadingElementIndex == 0);
					Create Effect(All Players(All Teams), Sparkles, Global.EffectColors[6], Global.UnlockLocations[0], 1, Visible To);
				Else If(Global.LoadingElementIndex == 1);
					Create Effect(All Players(All Teams), Sparkles, Global.EffectColors[7], Global.UnlockLocations[1], 1, Visible To);
				Else If(Global.LoadingElementIndex == 2);
					Create Effect(All Players(All Teams), Sparkles, Global.EffectColors[8], Global.UnlockLocations[2], 1, Visible To);
				Else If(Global.LoadingElementIndex == 3);
					Create Effect(All Players(All Teams), Sparkles, Global.EffectColors[9], Global.UnlockLocations[3], 1, Visible To);
				End;
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Speedrun"
		Else If(Global.LoadingObjectIndex == 6);
			If(Global.SpeedrunLocation != Vector(0, 0, 0) && Global.SpeedrunLocation != Null);
				Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == False), Custom String(
					"Speedrun Mode"), Global.SpeedrunLocation, 1, Clip Against Surfaces, Visible To, Color(Red), Default Visibility);
				Wait(0.030, Ignore Condition);
				Create Effect(Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == False), Good Aura, Color(Red),
					Global.SpeedrunLocation, 1, Visible To);
				Wait(0.030, Ignore Condition);
				Create In-World Text(Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == True), Custom String(
					"Speedrun Mode"), Global.SpeedrunLocation, 1, Clip Against Surfaces, Visible To, Color(Green), Default Visibility);
				Wait(0.030, Ignore Condition);
				Create Effect(Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == True), Good Aura, Color(Green),
					Global.SpeedrunLocation, 1, Visible To);
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		"Load Bouncepads"
		Else If(Global.LoadingObjectIndex == 7);
			If(Global.BouncepadLocations[Global.LoadingElementIndex] != Vector(0, 0, 0)
				&& Global.BouncepadLocations[Global.LoadingElementIndex] != Null);
				Create Effect(All Players(All Teams), Orb, Global.EffectColors[4], Global.BouncepadLocations[Global.LoadingElementIndex], 1,
					Visible To);
			End;
			Wait(0.030, Ignore Condition);
			Global.LoadingElementIndex += 1;
			Loop;
		End;
	}
}

規則("In World Text Effects")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"\"Heroes\" Text"
		If(Global.InWorldText[0] != Vector(0, 0, 0));
			Create In-World Text(All Players(All Teams), String("英雄"), Global.InWorldText[0], 3, Clip Against Surfaces, Visible To and String,
				Color(White), Default Visibility);
		End;
	}
}

規則("---------- FUNCTIONALITY ----------")
{
	事件
	{
		Ongoing - Global;
	}
}

規則("Portal Usage")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is True For Any(Filtered Array(Global.PortalLocations, Current Array Element != Vector(0, 0, 0)), Distance Between(Eye Position(
			Event Player), Current Array Element) < 1.500) == True;
	}

	動作
	{
		For Player Variable(Event Player, LoopCounter, 0, Global.MaxObjectIndex[3] + 1, 1);
			If(Event Player.PortalUnlocked[Event Player.LoopCounter] == True);
				If(Global.PortalLocations[Event Player.LoopCounter] != Vector(0, 0, 0) && Global.PortalLocations[Event Player.LoopCounter] != 0);
					If(Global.PortalDestinations[Event Player.LoopCounter] != Vector(0, 0, 0)
						&& Global.PortalDestinations[Event Player.LoopCounter] != 0);
						If(Distance Between(Eye Position(Event Player), Global.PortalLocations[Event Player.LoopCounter]) <= 1.500);
							If(Event Player.LoopCounter == 13 && Hero Of(Event Player) == Global.PortalHeros[0]);
								Start Forcing Player To Be Hero(Event Player, Global.PortalHeros[1]);
								Teleport(Event Player, Global.PortalDestinations[Event Player.LoopCounter]);
								Event Player.Respawn = Global.PortalDestinations[13];
								If(!Event Player.HeroesUnlocked[0]);
									Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("得到解鎖"), Hero Icon String(
										Global.HeroRoster[1])));
									Event Player.HeroesUnlocked[0] = True;
									Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
									Call Subroutine(UpdateCount);
								End;
								Break;
							Else If(Event Player.LoopCounter == 14 && Hero Of(Event Player) == Global.PortalHeros[1]);
								Start Forcing Player To Be Hero(Event Player, Global.PortalHeros[2]);
								Teleport(Event Player, Global.PortalDestinations[Event Player.LoopCounter]);
								Event Player.Respawn = Global.PortalDestinations[14];
								If(!Event Player.HeroesUnlocked[1]);
									Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("得到解鎖"), Hero Icon String(
										Global.HeroRoster[2])));
									Event Player.HeroesUnlocked[1] = True;
									Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
									Call Subroutine(UpdateCount);
								End;
								Break;
							Else If(Event Player.LoopCounter == 15 && Hero Of(Event Player) == Global.PortalHeros[2]);
								Start Forcing Player To Be Hero(Event Player, Global.PortalHeros[3]);
								Teleport(Event Player, Global.PortalDestinations[Event Player.LoopCounter]);
								Event Player.Respawn = Global.PortalDestinations[15];
								If(!Event Player.HeroesUnlocked[2]);
									Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("得到解鎖"), Hero Icon String(
										Global.HeroRoster[3])));
									Event Player.HeroesUnlocked[2] = True;
									Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
									Call Subroutine(UpdateCount);
								End;
								Break;
							Else If(Event Player.LoopCounter == 12 && Hero Of(Event Player) == Global.PortalHeros[3]);
								Start Forcing Player To Be Hero(Event Player, Global.PortalHeros[4]);
								Teleport(Event Player, Global.PortalDestinations[Event Player.LoopCounter]);
								Event Player.Respawn = Global.PortalDestinations[12];
								If(!Event Player.HeroesUnlocked[3]);
									Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("得到解鎖"), Hero Icon String(
										Global.HeroRoster[4])));
									Event Player.HeroesUnlocked[3] = True;
									Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
									Call Subroutine(UpdateCount);
								End;
								Break;
							Else If(Event Player.LoopCounter == 11 && Hero Of(Event Player) == Global.PortalHeros[4]);
								Start Forcing Player To Be Hero(Event Player, Global.PortalHeros[4]);
								Teleport(Event Player, Global.PortalDestinations[Event Player.LoopCounter]);
								Event Player.Respawn = Global.PortalDestinations[11];
								If(!Event Player.HeroesUnlocked[4]);
									Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("得到解鎖"), Hero Icon String(
										Global.HeroRoster[4])));
									Event Player.HeroesUnlocked[4] = True;
									Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
									Call Subroutine(UpdateCount);
								End;
								Break;
								停用 Else If(Event Player.LoopCounter == 8);
								停用 Teleport(Event Player, Global.PortalDestinations[Event Player.LoopCounter]);
								停用 Event Player.Respawn = Global.PortalDestinations[8];
								停用 Else If(Event Player.LoopCounter == 9);
								停用 Teleport(Event Player, Global.PortalDestinations[Event Player.LoopCounter]);
								停用 Event Player.Respawn = Global.PortalDestinations[9];
							Else;
								Teleport(Event Player, Global.PortalDestinations[Event Player.LoopCounter]);
								Break;
							End;
						End;
					End;
				End;
			End;
		End;
	}
}

規則("Lava Death")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Has Spawned(Event Player) == True;
		Is Alive(Event Player) == True;
		Hero Of(Event Player) != Global.HeroRoster[5];
		Hero Of(Event Player) != Hero(迴音);
		Event Player.CanDie == True;
	}

	動作
	{
		If(Is True For Any(Global.LavaLocations, Distance Between(Position Of(Event Player) + Vector(0, 0.300, 0), Current Array Element)
			< Global.LavaRadius[Index Of Array Value(Global.LavaLocations, Current Array Element)]) == True);
			If(Hero Of(Event Player) == Hero(莫伊拉) && Is Using Ability 1(Event Player) == True);
				Wait(0.050 + Count Of(Global.LavaLocations) * 0.001, Ignore Condition);
				Loop If Condition Is True;
			Else If(Hero Of(Event Player) == Hero(死神) && Is Using Ability 1(Event Player) == True);
				Wait(0.050 + Count Of(Global.LavaLocations) * 0.001, Ignore Condition);
				Loop If Condition Is True;
			Else If(Hero Of(Event Player) == Hero(小美) && Is Using Ability 1(Event Player) == True);
				Wait(0.050 + Count Of(Global.LavaLocations) * 0.001, Ignore Condition);
				Loop If Condition Is True;
			End;
			Kill(Event Player, Null);
		End;
		Wait(0.050 + Count Of(Global.LavaLocations) * 0.001, Ignore Condition);
		Loop If Condition Is True;
	}
}

規則("Respawning")
{
	事件
	{
		Player Died;
		All;
		All;
	}

	動作
	{
		If(Event Player.Victory == False);
			Event Player.Deaths += 1;
		End;
		Wait(0.400, Ignore Condition);
		Teleport(Event Player, Event Player.Respawn);
		Wait(0.400, Ignore Condition);
		Resurrect(Event Player);
		Clear Status(Event Player, Phased Out);
		If(Global.PlayerBehaviors[0] == 2);
			Set Status(Event Player, Null, Phased Out, 3599);
		End;
		If(Event Player.Respawn == Global.ZoneLocations[0]);
			If(Count Of(Filtered Array(Event Player.HeroesUnlocked, Current Array Element == True)) == 0);
				Event Player.Timer = 0;
				Event Player.Deaths = 0;
			End;
		End;
		Set Ability Cooldown(Event Player, Button(Ability 1), 0);
		Set Ability Cooldown(Event Player, Button(Ability 2), 0);
		Set Ability Cooldown(Event Player, Button(Secondary Fire), 0);
	}
}

規則("Checkpoint")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Has Spawned(Event Player) == True;
		Event Player.Victory == True;
		Hero Of(Event Player) != Global.HeroRoster[5];
		Event Player.CanDie == True;
		Is True For Any(Filtered Array(Global.CheckpointLocations, Current Array Element != Vector(0, 0, 0)), Distance Between(Position Of(
			Event Player), Current Array Element) < 1) == True;
	}

	動作
	{
		For Player Variable(Event Player, LoopCounter, 0, Global.MaxObjectIndex[1] + 1, 1);
			If(Global.CheckpointLocations[Event Player.LoopCounter] != Vector(0, 0, 0)
				&& Global.CheckpointLocations[Event Player.LoopCounter] != 0);
				If(Event Player.Respawn != Global.CheckpointLocations[Event Player.LoopCounter]);
					If(Distance Between(Position Of(Event Player), Global.CheckpointLocations[Event Player.LoopCounter]) <= 1);
						Event Player.Respawn = Global.CheckpointLocations[Event Player.LoopCounter];
						Event Player.AlternativeRespawn = Global.CheckpointLocations[Event Player.LoopCounter];
						Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
						Small Message(Event Player, Custom String("Checkpoint!"));
						Break;
					End;
				End;
			End;
		End;
	}
}

規則("Zones")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Has Spawned(Event Player) == True;
		Hero Of(Event Player) != Global.HeroRoster[5];
		Event Player.CanDie == True;
	}

	動作
	{
		If(Global.ZoneLocations[1] != Vector(0, 0, 0));
			If(Event Player.Respawn != Global.ZoneLocations[1] && Distance Between(Position Of(Event Player), Global.ZoneLocations[1]) <= 2);
				Event Player.Respawn = Global.ZoneLocations[1];
				Small Message(Event Player, Custom String("{0}!", String("檢查點")));
				Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
				If(Event Player.ZonesReached[0] == False);
					Event Player.ZonesReached[0] = True;
					Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("抵達"), Global.ZoneText[1]));
					Call Subroutine(UpdateCount);
				End;
			End;
		End;
		If(Global.ZoneLocations[2] != Vector(0, 0, 0));
			If(Event Player.Respawn != Global.ZoneLocations[2] && Distance Between(Position Of(Event Player), Global.ZoneLocations[2]) <= 2);
				Event Player.Respawn = Global.ZoneLocations[2];
				Event Player.AlternativeRespawn = Global.ZoneLocations[2];
				Small Message(Event Player, Custom String("{0}!", String("檢查點")));
				Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
				If(Event Player.ZonesReached[1] == False);
					Event Player.ZonesReached[1] = True;
					Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("抵達"), Global.ZoneText[2]));
					Call Subroutine(UpdateCount);
				End;
			End;
		End;
		If(Global.ZoneLocations[3] != Vector(0, 0, 0));
			If(Event Player.Respawn != Global.ZoneLocations[3] && Distance Between(Position Of(Event Player), Global.ZoneLocations[3]) <= 2);
				Event Player.Respawn = Global.ZoneLocations[3];
				Event Player.AlternativeRespawn = Global.ZoneLocations[3];
				Small Message(Event Player, Custom String("{0}!", String("檢查點")));
				Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
				If(Event Player.ZonesReached[2] == False);
					Event Player.ZonesReached[2] = True;
					Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("抵達"), Global.ZoneText[3]));
					Call Subroutine(UpdateCount);
				End;
			End;
		End;
		If(Global.ZoneLocations[4] != Vector(0, 0, 0));
			If(Event Player.Respawn != Global.ZoneLocations[4] && Distance Between(Position Of(Event Player), Global.ZoneLocations[4]) <= 2);
				Event Player.Respawn = Global.ZoneLocations[4];
				Event Player.AlternativeRespawn = Global.ZoneLocations[4];
				Small Message(Event Player, Custom String("{0}!", String("檢查點")));
				Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
				If(Event Player.ZonesReached[3] == False);
					Event Player.ZonesReached[3] = True;
					Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("抵達"), Global.ZoneText[4]));
					Call Subroutine(UpdateCount);
				End;
			End;
		End;
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
	}
}

規則("Hero Swap")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is True For Any(Filtered Array(Global.HeroLocations, Current Array Element != Vector(0, 0, 0)), Distance Between(Eye Position(
			Event Player), Current Array Element) < 1.500) == True;
	}

	動作
	{
		For Player Variable(Event Player, LoopCounter, 0, Global.MaxObjectIndex[4] + 1, 1);
			If(Global.HeroLocations[Event Player.LoopCounter] != Vector(0, 0, 0) && Global.HeroLocations[Event Player.LoopCounter] != 0);
				If(Event Player.HeroesUnlocked[Event Player.LoopCounter - 1] == True || Event Player.LoopCounter == 0);
					If(Distance Between(Eye Position(Event Player), Global.HeroLocations[Event Player.LoopCounter]) <= 1.500);
						Start Forcing Player To Be Hero(Event Player, Global.HeroRoster[Event Player.LoopCounter]);
						If(Event Player.Respawn == Global.ZoneLocations[1]);
							Event Player.AlternativeRespawn = Null;
						End;
						Break;
					End;
				End;
			End;
		End;
	}
}

規則("Hero Swap Tip")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Has Spawned(Event Player) == True;
		Is True For Any(Filtered Array(Global.HeroLocations, Current Array Element != Vector(0, 0, 0)), Distance Between(Eye Position(
			Event Player), Current Array Element) < 1.500) == True;
	}

	動作
	{
		Wait(2, Abort When False);
		Small Message(Event Player, Custom String("Press [Interact]"));
	}
}

規則("Hero Unlock")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Has Spawned(Event Player) == True;
		Event Player.HeroCount < Global.MaxHeroes;
		Hero Of(Event Player) != Global.HeroRoster[5];
		Is True For Any(Filtered Array(Global.UnlockLocations, Current Array Element != Vector(0, 0, 0)), Distance Between(Eye Position(
			Event Player), Current Array Element) < 1.500) == True;
	}

	動作
	{
		For Player Variable(Event Player, LoopCounter, 0, Global.MaxObjectIndex[5] + 1, 1);
			If(Global.UnlockLocations[Event Player.LoopCounter] != Vector(0, 0, 0) && Global.UnlockLocations[Event Player.LoopCounter] != 0);
				If(Event Player.HeroesUnlocked[Event Player.LoopCounter] == False);
					If(Distance Between(Eye Position(Event Player), Global.UnlockLocations[Event Player.LoopCounter]) <= 1.500);
						Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("得到解鎖"), Hero Icon String(
							Global.HeroRoster[Event Player.LoopCounter + 1])));
						Event Player.HeroesUnlocked[Event Player.LoopCounter] = True;
						Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
						Call Subroutine(UpdateCount);
						Break;
					End;
				End;
			End;
		End;
	}
}

規則("Teleport Back to a Spawn Point")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Ultimate Charge Percent(Event Player) < 100;
	}

	動作
	{
		If(Distance Between(Position Of(Event Player), Event Player.Respawn) > 1);
			Teleport(Event Player, Event Player.Respawn);
			Wait(0.050, Ignore Condition);
			Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
		Else;
			If(Event Player.AlternativeRespawn != Null);
				If(Distance Between(Position Of(Event Player), Event Player.AlternativeRespawn) > 1);
					Teleport(Event Player, Event Player.AlternativeRespawn);
					Event Player.Respawn = Event Player.AlternativeRespawn;
				Else;
					If(Event Player.ZonesReached[0] == True);
						Teleport(Event Player, Global.ZoneLocations[1]);
					End;
				End;
			End;
		End;
	}
}

規則("Teleport to MYCP")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Ultimate Charge Percent(Event Player) < 100;
	    Is Button Held(Event Player, Button(Crouch)) == True;
	}

	動作
	{
        If(Event Player.MYCP != Null);
            If(Distance Between(Position Of(Event Player), Event Player.MYCP) > 1);
                Teleport(Event Player, Event Player.MYCP);
                Event Player.Respawn = Event Player.MYCP;
	}
}

規則("Bouncepad Interaction")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Is True For Any(Filtered Array(Global.BouncepadLocations, Current Array Element != Vector(0, 0, 0)), Distance Between(Position Of(
			Event Player), Current Array Element) < 1.500) == True;
	}

	動作
	{
		For Player Variable(Event Player, LoopCounter, 0, Global.MaxObjectIndex[7] + 1, 1);
			If(Global.BouncepadLocations[Event Player.LoopCounter] != Vector(0, 0, 0)
				&& Global.BouncepadLocations[Event Player.LoopCounter] != 0);
				If(Distance Between(Position Of(Event Player), Global.BouncepadLocations[Event Player.LoopCounter]) <= 1.500);
					Apply Impulse(Event Player, Vector(0, 1, 0), Global.BouncepadStrength[Event Player.LoopCounter], To World, Cancel Contrary Motion);
					Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Event Player, 75);
					Break;
				End;
			End;
		End;
	}
}

規則("Victory")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.Victory == False;
		Event Player.ZoneCount == Global.MaxZones;
		Event Player.HeroCount == Global.MaxHeroes;
	}

	動作
	{
		Event Player.Victory = True;
		If(Event Player.SpeedRunMode == True);
			Destroy HUD Text(Event Player.MyHUD[1]);
			Create HUD Text(Event Player, Custom String("Finished"), Custom String("Deaths: {0}", Event Player.Deaths), Custom String(
				"Time: {0}:{1}", Round To Integer(Event Player.Timer / 60, Down), Round To Integer(Event Player.Timer % 60, Down)), Top, 1,
				Color(Purple), Color(Green), Color(Green), Visible To and String, Default Visibility);
			Event Player.MyHUD[0] = Last Text ID;
			Big Message(All Players(All Teams), Custom String(" \r\n{0} FINISHED IN {1}:{2}!", Event Player, Round To Integer(
				Event Player.Timer / 60, Down), Round To Integer(Event Player.Timer % 60, Down)));
		Else;
			Big Message(All Players(All Teams), Custom String(" \r\n{0} {1}!", Event Player, String("已完成")));
		End;
	}
}

規則("Secret Hero")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Has Spawned(Event Player) == True;
		Global.HeroLocations[5] != Vector(0, 0, 0);
		Distance Between(Eye Position(Event Player), Global.HeroLocations[5]) <= 1.500;
		Hero Of(Event Player) != Global.HeroRoster[5];
	}

	動作
	{
		Start Forcing Player To Be Hero(Event Player, Global.HeroRoster[5]);
		If(Event Player.FoundSecretHero == False);
			Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("被發現"), Hero Icon String(
				Global.HeroRoster[5])));
		End;
		Wait(0.250, Ignore Condition);
		Teleport(Event Player, Global.ZoneLocations[1]);
		Event Player.FoundSecretHero = True;
	}
}

規則("Secret Hero Jump")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Is Button Held(Event Player, Button(Jump)) == True;
		Hero Of(Event Player) == Global.HeroRoster[5];
	}

	動作
	{
		Apply Impulse(Event Player, Vector(0, 1, 0), 30, To World, Cancel Contrary Motion);
		Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Event Player, 75);
	}
}

規則("Secret Hero Speed")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Hero Of(Event Player) == Global.HeroRoster[5];
	}

	動作
	{
		Set Move Speed(Event Player, 400);
		Wait(0.250, Ignore Condition);
		Loop If Condition Is True;
		Set Move Speed(Event Player, 100);
	}
}

規則("Self-Restart")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
	}

	動作
	{
		Wait(0.750, Abort When False);
		Small Message(Event Player, Custom String("Resetting Progress... 3"));
		Wait(0.750, Abort When False);
		Small Message(Event Player, Custom String("Resetting Progress... 2"));
		Wait(0.750, Abort When False);
		Small Message(Event Player, Custom String("Resetting Progress... 1"));
		Wait(0.750, Abort When False);
		Small Message(Event Player, Custom String("Progress Reset!"));
		Wait(0.050, Ignore Condition);
		Call Subroutine(ResetProgress);
	}
}

規則("Speed Run Toggle")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Global.SpeedrunLocation != Vector(0, 0, 0);
		Distance Between(Eye Position(Event Player), Global.SpeedrunLocation) < 1.500;
	}

	動作
	{
		If(Event Player.SpeedRunMode == False);
			Wait(0.250, Ignore Condition);
			If(!Is Button Held(Event Player, Button(Interact)));
				Small Message(Event Player, Custom String(
					"WARNING: Enabling speed run will reset all progress\r\n        Hold [Interact] to enable speed run mode"));
			End;
			Wait(1, Abort When False);
			Event Player.SpeedRunMode = True;
			Event Player.Victory = False;
			Call Subroutine(ResetProgress);
			Create HUD Text(Event Player, Custom String("Speed Run"), Custom String("Deaths: {0}", Event Player.Deaths), Custom String(
				"Time: {0}:{1}", Round To Integer(Event Player.Timer / 60, Down), Round To Integer(Event Player.Timer % 60, Down)), Top, 1,
				Color(Orange), Color(Red), Color(Orange), Visible To and String, Default Visibility);
			Event Player.MyHUD[1] = Last Text ID;
			Small Message(Event Player, Custom String("Speed Run Mode Activated"));
		Else;
			Destroy HUD Text(Event Player.MyHUD[0]);
			Destroy HUD Text(Event Player.MyHUD[1]);
			Event Player.SpeedRunMode = False;
			Small Message(Event Player, Custom String("Speed Run Mode Disabled"));
		End;
	}
}

規則("Speed Run Timer Increase")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.SpeedRunMode == True;
		Event Player.Victory == False;
		Distance Between(Position Of(Event Player), Global.ZoneLocations[0]) > 1;
	}

	動作
	{
		Wait(0.992, Abort When False);
		Event Player.Timer += 1;
		Loop;
	}
}

停用 規則("Tutorial Mode Toggle")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.TutorialMode == False;
		Is Button Held(Event Player, Button(Reload)) == True;
	}

	動作
	{
		Wait(0.250, Abort When False);
		Small Message(Event Player, Custom String("Starting Tutorial Mode... 3"));
		Wait(0.750, Abort When False);
		Small Message(Event Player, Custom String("Starting Tutorial Mode... 2"));
		Wait(0.750, Abort When False);
		Small Message(Event Player, Custom String("Starting Tutorial Mode... 1"));
		Wait(0.750, Abort When False);
		Small Message(Event Player, Custom String("Tutorial Mode Activated!"));
		Event Player.TutorialMode = True;
	}
}

停用 規則("Tutorial Mode Set Checkpoint")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.TutorialMode == True;
		Is Button Held(Event Player, Button(Reload)) == True;
		Distance Between(Position Of(Event Player), Event Player.Respawn) > 2;
		Vertical Speed Of(Event Player) == 0;
		Horizontal Speed Of(Event Player) == 0;
	}

	動作
	{
		Wait(0.500, Abort When False);
		Small Message(Event Player, Custom String("Checkpoint Set!"));
		Event Player.Respawn = Position Of(Event Player);
		Event Player.AlternativeRespawn = Position Of(Event Player);
		Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
	}
}

規則("Reset Progress | Subroutine")
{
	事件
	{
		Subroutine;
		ResetProgress;
	}

	動作
	{
		Set Facing(Event Player, Global.SpawnFaceDirection, To World);
		Start Forcing Player To Be Hero(Event Player, Global.HeroRoster[0]);
		If(Event Player.SpeedRunMode == True && Event Player.Victory == True);
			Create HUD Text(Event Player, Custom String("Speed Run"), Custom String("Deaths: {0}", Event Player.Deaths), Custom String(
				"Time: {0}:{1}", Round To Integer(Event Player.Timer / 60, Down), Round To Integer(Event Player.Timer % 60, Down)), Top, 1,
				Color(Orange), Color(Red), Color(Orange), Visible To and String, Default Visibility);
			Event Player.MyHUD[1] = Last Text ID;
		End;
		Destroy HUD Text(Event Player.MyHUD[0]);
		Event Player.PortalUnlocked = Global.PortalUnlockDefaults;
		Event Player.Victory = False;
		Event Player.ZonesReached[0] = False;
		Event Player.ZonesReached[1] = False;
		Event Player.ZonesReached[2] = False;
		Event Player.ZonesReached[3] = False;
		Event Player.HeroesUnlocked[0] = False;
		Event Player.HeroesUnlocked[1] = False;
		Event Player.HeroesUnlocked[2] = False;
		Event Player.HeroesUnlocked[3] = False;
		Event Player.EasterEggsFound[0] = False;
		Event Player.EasterEggsFound[1] = False;
		Event Player.EasterEggsFound[2] = False;
		Event Player.EasterEggsFound[3] = False;
		Event Player.EasterEggsFound[4] = False;
		Event Player.EasterEggsFound[5] = False;
		Event Player.EasterEggsFound[6] = False;
		Event Player.EasterEggsFound[7] = False;
		Event Player.EasterEggsFound[8] = False;
		If(Global.ZoneLocations[0] != Vector(0, 0, 0));
			Event Player.Respawn = Global.ZoneLocations[0];
		End;
		Event Player.Deaths = 0;
		Event Player.Timer = 0;
		Event Player.ZoneCount = 0;
		Event Player.HeroCount = 0;
		Event Player.AlternativeRespawn = Null;
		Teleport(Event Player, Event Player.Respawn);
		Wait(0.100, Ignore Condition);
		Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Position Of(Event Player), 100);
		Event Player.TutorialMode = False;
		Event Player.FoundSecretHero = False;
		Event Player.PortalPartStatus = Array(False, False, False, False, False, False, False, False, False, False, False);
		Event Player.PortalPartCounter[0] = 0;
		Event Player.PortalPartCounter[1] = 0;
		Event Player.PortalPartCounter[2] = 0;
		Event Player.PortalPartCounter[3] = 0;
		Event Player.PortalPartCounter[4] = 0;
	}
}

規則("Update Count | Subroutine")
{
	事件
	{
		Subroutine;
		UpdateCount;
	}

	動作
	{
		Event Player.ZoneCount = Count Of(Filtered Array(Event Player.ZonesReached, Current Array Element == True));
		Event Player.HeroCount = Count Of(Filtered Array(Event Player.HeroesUnlocked, Current Array Element == True));
		If(Event Player.HeroCount > 5);
			Event Player.HeroCount = 5;
		End;
	}
}

規則("Match Time Initiation")
{
	事件
	{
		Ongoing - Global;
	}

	條件
	{
		Is Game In Progress == True;
		Is Assembling Heroes == False;
	}

	動作
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Match Time - {0}:{1}", Round To Integer(Global.MatchTime / 60,
			Down), Round To Integer(Global.MatchTime % 60, Down)), Top, -10, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Set Match Time(3599);
		Wait(5, Ignore Condition);
		Pause Match Time;
	}
}

規則("Match Time Warning")
{
	事件
	{
		Ongoing - Global;
	}

	條件
	{
		"10 Min Warning"
		Global.MatchTime < 600;
	}

	動作
	{
		Big Message(All Players(All Teams), Custom String("10 Minute Warning"));
		Wait(300, Ignore Condition);
		Big Message(All Players(All Teams), Custom String("5 Minute Warning"));
		Wait(240, Ignore Condition);
		Big Message(All Players(All Teams), Custom String("1 Minute Warning"));
		Wait(60, Ignore Condition);
		Big Message(All Players(All Teams), Custom String("Match Time Is Up!"));
		Enable Built-In Game Mode Completion;
		Enable Game Mode In-World UI(All Players(All Teams));
		Enable Game Mode HUD(All Players(All Teams));
		Set Match Time(0);
		Wait(0.250, Ignore Condition);
		Unpause Match Time;
	}
}

規則("Match Time")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Wait(0.998, Ignore Condition);
		Global.MatchTime -= 1;
		If(Global.MatchTime <= 0);
			Abort;
		End;
		Loop;
	}
}

規則("Skip Assembling Heroes")
{
	事件
	{
		Ongoing - Global;
	}

	條件
	{
		Is Assembling Heroes == True;
	}

	動作
	{
		Set Match Time(1);
	}
}

規則("Anti Crash Activation")
{
	事件
	{
		Ongoing - Global;
	}

	條件
	{
		Global.AntiCrash == False;
		Server Load > 200;
	}

	動作
	{
		Wait(1, Abort When False);
		Small Message(All Players(All Teams), Custom String("Anti crash system activated"));
		Set Slow Motion(10);
		Global.AntiCrash = True;
	}
}

規則("Anti Crash Deactivation")
{
	事件
	{
		Ongoing - Global;
	}

	條件
	{
		Global.AntiCrash == True;
		Server Load < 175;
	}

	動作
	{
		Set Slow Motion(100);
		Global.AntiCrash = False;
	}
}

規則("Prevent Damage")
{
	事件
	{
		Player Took Damage;
		All;
		All;
	}

	條件
	{
		Is Alive(Event Player) == True;
	}

	動作
	{
		Set Player Health(Event Player, Max Health(Event Player));
	}
}

規則("Правило 101")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	動作
	{
		Create Effect(Global.visiblities[6], Sphere, Color(Sky Blue), Vector(35.040, 5.406, -10.356), 4.400,
			Visible To Position and Radius);
		Create Effect(Global.visiblities[7], Sphere, Color(Sky Blue), Vector(-38.640, 11.650, 100.990), 3.700,
			Visible To Position and Radius);
	}
}

規則("No collision")
{
	事件
	{
		Ongoing - Each Player;
		All;
		巴帝斯特;
	}

	條件
	{
		Distance Between(Vector(35.040, 5.406, -10.356), Position Of(Event Player)) < 4.400;
		Has Spawned(Event Player) == True;
		Is Alive(Event Player) == True;
	}

	動作
	{
		Disable Movement Collision With Environment(Event Player, False);
		Wait Until(Distance Between(Vector(35.040, 5.406, -10.356), Position Of(Event Player)) > 4.400, 99999);
		Enable Movement Collision With Environment(Event Player);
	}
}

規則("No collision")
{
	事件
	{
		Ongoing - Each Player;
		All;
		毀滅拳王;
	}

	條件
	{
		Distance Between(Vector(-38.640, 11.650, 100.990), Position Of(Event Player)) < 3.700;
		Has Spawned(Event Player) == True;
		Is Alive(Event Player) == True;
	}

	動作
	{
		Disable Movement Collision With Environment(Event Player, False);
		Wait Until(Distance Between(Vector(-38.640, 11.650, 100.990), Position Of(Event Player)) > 3.700, 99999);
		Enable Movement Collision With Environment(Event Player);
	}
}

規則("-----EASTER EGG-----")
{
	事件
	{
		Ongoing - Global;
	}
}

規則("Easter Egg Data")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Easter Egg Locations"
		Global.EasterEggLocations[0] = Vector(10.091, 6.523, 23.134);
		Global.EasterEggLocations[1] = Vector(-7.511, 6.810, 135.508);
		Global.EasterEggLocations[2] = Vector(5.626, 5.851, 54.189);
		Global.EasterEggLocations[3] = Vector(-41.988, 10.974, -19.566);
		Global.EasterEggLocations[4] = Vector(-38.181, 3.050, 58.347);
		"Easter Egg Heroes"
		Global.EasterEggHeroes[0] = Hero(D.Va);
		Global.EasterEggHeroes[1] = Hero(士兵76);
		Global.EasterEggHeroes[2] = Hero(巴帝斯特);
		Global.EasterEggHeroes[3] = Hero(毀滅拳王);
		Global.EasterEggHeroes[4] = Hero(死神);
		"Easter Egg Hero Location"
		Global.EasterEggLocations[6] = Vector(-63.164, 2.880, 53.974);
	}
}

規則("Easter Egg Collection")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Has Spawned(Event Player) == True;
		Event Player.Victory == True;
		Is True For Any(Global.EasterEggHeroes, !Event Player.EasterEggsFound[Current Array Index] && Hero Of(Event Player)
			== Current Array Element && Distance Between(Eye Position(Event Player), Global.EasterEggLocations[Current Array Index])
			< 1.500) == True;
	}

	動作
	{
		Event Player.EasterEggsFound[7] = True;
		Event Player.EasterEggsFound[Index Of Array Value(Global.EasterEggHeroes, Hero Of(Event Player))] = True;
		Small Message(Event Player, Custom String("Easter Egg Found"));
		Play Effect(Event Player, Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
		If(Count Of(Filtered Array(Event Player.EasterEggsFound, Current Array Element)) >= 6);
			Wait(0.250, Ignore Condition);
			Event Player.EasterEggsFound[6] = True;
			Big Message(Event Player, Custom String(" \r\n{0} The Secret Has Appeared {0}", Icon String(Spiral)));
			Play Effect(Event Player, Ring Explosion Sound, Color(White), Position Of(Event Player), 100);
		End;
	}
}

規則("Easter Egg Hero")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Has Spawned(Event Player) == True;
		Event Player.EasterEggsFound[6] == True;
		Distance Between(Eye Position(Event Player), Global.EasterEggLocations[6]) < 1.500;
		(Hero Of(Event Player) == Global.HeroRoster[5] && !Is Button Held(Event Player, Button(Interact))) == False;
		Hero Of(Event Player) != Hero(迴音);
	}

	動作
	{
		Start Forcing Player To Be Hero(Event Player, Hero(迴音));
		If(!Event Player.EasterEggsFound[8]);
			Big Message(All Players(All Teams), Custom String(" \r\n{0} {1} {2}", Event Player, String("被發現"), Hero Icon String(Hero(迴音))));
		End;
		Wait(0.250, Ignore Condition);
		Event Player.EasterEggsFound[8] = True;
	}
}

規則("Easter Effects")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Easter Egg Effects"
		Create Effect(Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[0] && Hero Of(Current Array Element)
			== Global.EasterEggHeroes[0] && Current Array Element.Victory), Sparkles, Color(Sky Blue), Global.EasterEggLocations[0], 1,
			Visible To);
		Create Effect(Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[1] && Hero Of(Current Array Element)
			== Global.EasterEggHeroes[1] && Current Array Element.Victory), Sparkles, Color(Sky Blue), Global.EasterEggLocations[1], 1,
			Visible To);
		Create Effect(Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[2] && Hero Of(Current Array Element)
			== Global.EasterEggHeroes[2] && Current Array Element.Victory), Sparkles, Color(Sky Blue), Global.EasterEggLocations[2], 1,
			Visible To);
		Create Effect(Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[3] && Hero Of(Current Array Element)
			== Global.EasterEggHeroes[3] && Current Array Element.Victory), Sparkles, Color(Sky Blue), Global.EasterEggLocations[3], 1,
			Visible To);
		Create Effect(Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[4] && Hero Of(Current Array Element)
			== Global.EasterEggHeroes[4] && Current Array Element.Victory), Sparkles, Color(Sky Blue), Global.EasterEggLocations[4], 1,
			Visible To);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.EasterEggsFound[6]), Bad Aura, Color(Sky Blue),
			Global.EasterEggLocations[6], 1, Visible To);
	}
}

規則("Text")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"Easter Eggs Found"
		Create HUD Text(Filtered Array(Local Player, Local Player.EasterEggsFound[7]), Null, Null, Custom String("Easter Eggs\r\n{0} / 5",
			Count Of(Filtered Array(Array Slice(Local Player.EasterEggsFound, 0, 5), Current Array Element))), Left, 3, Color(White),
			Color(White), Color(Blue), Visible To and String, Default Visibility);
	}
}

停用 規則("Custom Portal")
{
	事件
	{
		Ongoing - Global;
	}
}

規則("Portal Heros")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.PortalHeros[0] = Hero(D.Va);
		Global.PortalHeros[1] = Hero(士兵76);
		Global.PortalHeros[2] = Hero(巴帝斯特);
		Global.PortalHeros[3] = Hero(毀滅拳王);
		Global.PortalHeros[4] = Hero(死神);
	}
}

規則("Portal Parts Locations")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		"First Portal Parts  Index: 13 "
		Global.PortalParts[0] = Vector(17.009, 3.718, 88.470);
		Global.PortalParts[1] = Vector(-29.059, 12.731, 76.529);
		Global.PortalParts[2] = Vector(-34.944, 11.584, 101.763);
		"Second Portal Parts  Index: 14"
		Global.PortalParts[3] = Vector(-6.803, 10.795, 53.315);
		Global.PortalParts[4] = Vector(5.091, 5.050, 54.727);
		Global.PortalParts[5] = Vector(-4.595, 1.550, 19.531);
		"Third Portal Parts  Index: 15"
		Global.PortalParts[6] = Vector(-27.234, 11.917, 18.174);
		Global.PortalParts[7] = Vector(-18.541, 9.779, -43.485);
		Global.PortalParts[8] = Vector(39.367, -0.569, -33.538);
		"Fourth Portal Parts Index: 12"
		Global.PortalParts[9] = Vector(-4.875, 10.183, 31.652);
		Global.PortalParts[10] = Vector(-12.360, 8.428, 122.171);
		Global.PortalParts[11] = Vector(-18.718, 6.288, 151.157);
		Global.PortalParts[12] = Vector(0.075, 5.367, 130.113);
		Global.PortalParts[13] = Vector(-79.864, 9.219, 138.553);
		"Fourth Portal Parts Index: 11"
		Global.PortalParts[14] = Vector(-14.774, 8.552, 70.196);
		Global.PortalParts[15] = Vector(30.772, 1.365, -12.904);
		Global.PortalParts[16] = Vector(-25.609, 9.540, 52.525);
	}
}

規則("Check Portals | Subroutine")
{
	事件
	{
		Subroutine;
		PortalOpen;
	}

	動作
	{
		If(
			Event Player.PortalPartStatus[0] && Event Player.PortalPartStatus[1] && Event Player.PortalPartStatus[2] && !Event Player.PortalUnlocked[13]);
			Event Player.PortalUnlocked[13] = True;
			Small Message(Event Player, Custom String("The portal is open!"));
			Set Move Speed(Event Player, 0);
			Disable Hero HUD(Event Player);
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Position Of(Event Player), 100);
			Start Camera(Event Player, Global.PortalLocations[13] + Vector(0, 8, -4), Global.PortalLocations[13], 1);
			Wait(2.500, Ignore Condition);
			Stop Camera(Event Player);
			Enable Hero HUD(Event Player);
			Set Move Speed(Event Player, 100);
		Else If(
				Event Player.PortalPartStatus[3] && Event Player.PortalPartStatus[4] && Event Player.PortalPartStatus[5] && !Event Player.PortalUnlocked[14]);
			Event Player.PortalUnlocked[14] = True;
			Small Message(Event Player, Custom String("The portal is open!"));
			Set Move Speed(Event Player, 0);
			Disable Hero HUD(Event Player);
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Position Of(Event Player), 100);
			Start Camera(Event Player, Global.PortalLocations[14] + Vector(5, 7, 0), Global.PortalLocations[14], 1);
			Wait(2.500, Ignore Condition);
			Enable Hero HUD(Event Player);
			Stop Camera(Event Player);
			Wait(1, Ignore Condition);
			Set Move Speed(Event Player, 100);
		Else If(
				Event Player.PortalPartStatus[6] && Event Player.PortalPartStatus[7] && Event Player.PortalPartStatus[8] && !Event Player.PortalUnlocked[15]);
			Event Player.PortalUnlocked[15] = True;
			Small Message(Event Player, Custom String("The portal is open!"));
			Set Move Speed(Event Player, 0);
			Disable Hero HUD(Event Player);
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Position Of(Event Player), 100);
			Start Camera(Event Player, Global.PortalLocations[15] + Vector(4, 6, -4), Global.PortalLocations[15], 1);
			Wait(2.500, Ignore Condition);
			Enable Hero HUD(Event Player);
			Stop Camera(Event Player);
			Wait(1, Ignore Condition);
			Set Move Speed(Event Player, 100);
		Else If(
				Event Player.PortalPartStatus[9] && Event Player.PortalPartStatus[10] && Event Player.PortalPartStatus[11] && Event Player.PortalPartStatus[12] && Event Player.PortalPartStatus[13] && !Event Player.PortalUnlocked[12]);
			Event Player.PortalUnlocked[12] = True;
			Small Message(Event Player, Custom String("The portal is open!"));
			Set Move Speed(Event Player, 0);
			Disable Hero HUD(Event Player);
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Position Of(Event Player), 100);
			Start Camera(Event Player, Global.PortalLocations[12] + Vector(4, 8, -2), Global.PortalLocations[12], 1);
			Wait(2.500, Ignore Condition);
			Stop Camera(Event Player);
			Enable Hero HUD(Event Player);
			Wait(1, Ignore Condition);
			Set Move Speed(Event Player, 100);
		Else If(
				Event Player.PortalPartStatus[14] && Event Player.PortalPartStatus[15] && Event Player.PortalPartStatus[16] && !Event Player.PortalUnlocked[11]);
			Event Player.PortalUnlocked[11] = True;
			Small Message(Event Player, Custom String("The portal is open!"));
			Set Move Speed(Event Player, 0);
			Disable Hero HUD(Event Player);
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Position Of(Event Player), 100);
			Start Camera(Event Player, Global.PortalLocations[11] + Vector(3, 7, 1), Global.PortalLocations[11], 1);
			Wait(2.500, Ignore Condition);
			Stop Camera(Event Player);
			Enable Hero HUD(Event Player);
			Wait(1, Ignore Condition);
			Set Move Speed(Event Player, 100);
		End;
	}
}

規則("Collect Parts")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Hero Of(Event Player) != Global.HeroRoster[5];
		Is True For Any(Filtered Array(Global.PortalParts, Current Array Element != Vector(0, 0, 0)), Distance Between(
			Current Array Element, Position Of(Event Player)) < 1.500) == True;
		Has Spawned(Event Player) == True;
	}

	動作
	{
		For Player Variable(Event Player, LoopCounter, 0, Count Of(Global.PortalParts) + 0, 1);
			If(Global.PortalParts[Event Player.LoopCounter] != Vector(0, 0, 0));
				If(Event Player.PortalPartStatus[Event Player.LoopCounter] == False);
					If(Distance Between(Position Of(Event Player), Global.PortalParts[Event Player.LoopCounter]) <= 1.500);
						If(Event Player.LoopCounter >= 0 && Event Player.LoopCounter <= 2 && Hero Of(Event Player) == Global.PortalHeros[0]);
							Event Player.PortalPartCounter[0] += 1;
							Event Player.PortalPartStatus[Event Player.LoopCounter] = True;
							Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
							Small Message(Event Player, Custom String("you have collected the key"));
						Else If(Event Player.LoopCounter >= 3 && Event Player.LoopCounter <= 5 && Hero Of(Event Player) == Global.PortalHeros[1]);
							Event Player.PortalPartCounter[1] += 1;
							Event Player.PortalPartStatus[Event Player.LoopCounter] = True;
							Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
							Small Message(Event Player, Custom String("you have collected the key"));
						Else If(Event Player.LoopCounter >= 6 && Event Player.LoopCounter <= 8 && Hero Of(Event Player) == Global.PortalHeros[2]);
							Event Player.PortalPartCounter[2] += 1;
							Event Player.PortalPartStatus[Event Player.LoopCounter] = True;
							Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
							Small Message(Event Player, Custom String("you have collected the key"));
						Else If(Event Player.LoopCounter >= 9 && Event Player.LoopCounter <= 13 && Hero Of(Event Player) == Global.PortalHeros[3]);
							Event Player.PortalPartCounter[3] += 1;
							Event Player.PortalPartStatus[Event Player.LoopCounter] = True;
							Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
							Small Message(Event Player, Custom String("you have collected the key"));
						Else If(Event Player.LoopCounter >= 14 && Event Player.LoopCounter <= 16 && Hero Of(Event Player) == Global.PortalHeros[4]);
							Event Player.PortalPartCounter[4] += 1;
							Event Player.PortalPartStatus[Event Player.LoopCounter] = True;
							Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 100);
							Small Message(Event Player, Custom String("you have collected the key"));
						End;
						Wait(0.250, Ignore Condition);
						停用 Call Subroutine(PortalOpen);
						Start Rule(PortalOpen, Restart Rule);
						Break;
					End;
				End;
			End;
		End;
	}
}

規則("Unlocking a Portal (reach the destination)")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Hero Of(Event Player) != Global.HeroRoster[5];
		Is True For Any(Filtered Array(Global.PortalDestinations, Current Array Element != Vector(0, 0, 0)), Distance Between(
			Current Array Element, Position Of(Event Player)) < 2) == True;
	}

	動作
	{
		For Player Variable(Event Player, LoopCounter, 0, Global.MaxObjectIndex[3] + 1, 1);
			If(Global.PortalDestinations[Event Player.LoopCounter] != Vector(0, 0, 0)
				&& Global.PortalDestinations[Event Player.LoopCounter] != 0);
				If(Event Player.PortalUnlocked[Event Player.LoopCounter] == False);
					If(Distance Between(Position Of(Event Player), Global.PortalDestinations[Event Player.LoopCounter]) <= 2);
						If(
							Event Player.LoopCounter == 13 || Event Player.LoopCounter == 14 || Event Player.LoopCounter == 15 || Event Player.LoopCounter == 12 || Event Player.LoopCounter == 11);
							Break;
						End;
						Event Player.PortalUnlocked[Event Player.LoopCounter] = True;
					End;
				End;
			End;
		End;
	}
}

規則("D.va Bondary")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.Victory == False;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Distance Between(Eye Position(Event Player), Vector(-26.380, 8.850, 65.180)) <= 8.400;
	}

	動作
	{
		If(Hero Of(Event Player) == Hero(D.Va));
			Kill(Event Player, Null);
			Small Message(Event Player, Custom String("Wrong way! There are no parts in this zone!"));
	}
}

規則("Soldier Bondary")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.Victory == False;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Distance Between(Eye Position(Event Player), Vector(-8.300, 9.230, 93.840)) <= 24.500;
	}

	動作
	{
		If(Hero Of(Event Player) == Hero(士兵76));
			Kill(Event Player, Null);
			Small Message(Event Player, Custom String("Wrong way! There are no parts in this zone!"));
	}
}

規則("Bap Bondary")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.Victory == False;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Distance Between(Eye Position(Event Player), Vector(-38.660, 10.060, 49.820)) <= 20;
	}

	動作
	{
		If(Hero Of(Event Player) == Hero(巴帝斯特));
			Kill(Event Player, Null);
			Small Message(Event Player, Custom String("Wrong way! There are no parts in this zone!"));
	}
}

規則("Doomfist Bondary")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.Victory == False;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Distance Between(Eye Position(Event Player), Vector(-9.430, 7.290, 11.290)) <= 15;
	}

	動作
	{
		If(Hero Of(Event Player) == Hero(毀滅拳王));
			Kill(Event Player, Null);
			Small Message(Event Player, Custom String("Wrong way! There are no parts in this zone!"));
	}
}

規則("Reaper Bondary")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Event Player.Victory == False;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Distance Between(Eye Position(Event Player), Vector(-8.300, 9.230, 97.840)) <= 24.500;
	}

	動作
	{
		If(Hero Of(Event Player) == Hero(死神));
			Kill(Event Player, Null);
			Small Message(Event Player, Custom String("Wrong way! There are no parts in this zone!"));
	}
}

規則("Visibilites")
{
	事件
	{
		Ongoing - Global;
	}

	動作
	{
		Global.visiblities[0] = Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[0] && Hero Of(
			Current Array Element) == Global.EasterEggHeroes[0] && Current Array Element.Victory);
		Global.visiblities[1] = Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[1] && Hero Of(
			Current Array Element) == Global.EasterEggHeroes[1] && Current Array Element.Victory);
		Global.visiblities[2] = Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[2] && Hero Of(
			Current Array Element) == Global.EasterEggHeroes[2] && Current Array Element.Victory);
		Global.visiblities[3] = Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[3] && Hero Of(
			Current Array Element) == Global.EasterEggHeroes[3] && Current Array Element.Victory);
		Global.visiblities[4] = Filtered Array(All Players(All Teams), !Current Array Element.EasterEggsFound[4] && Hero Of(
			Current Array Element) == Global.EasterEggHeroes[4] && Current Array Element.Victory);
		Global.visiblities[5] = Filtered Array(All Players(All Teams), Current Array Element.EasterEggsFound[6]);
		Global.visiblities[6] = Players On Hero(Hero(巴帝斯特), All Teams);
		Global.visiblities[7] = Players On Hero(Hero(毀滅拳王), All Teams);
		停用 Global.visiblities[8] = Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.CustomPortalHero[0]);
		停用 Global.visiblities[9] = Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[0] == True);
		停用 Global.visiblities[10] = Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[0] == False);
		停用 Global.visiblities[11] = Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[1] == True);
		停用 Global.visiblities[12] = Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[1] == False);
		停用 Global.visiblities[13] = Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[2] == True);
		停用 Global.visiblities[14] = Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[2] == False);
		停用 Global.visiblities[15] = Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[3] == True);
		停用 Global.visiblities[16] = Filtered Array(All Players(All Teams), Current Array Element.HeroesUnlocked[3] == False);
		停用 Global.visiblities[17] = Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == False);
		停用 Global.visiblities[18] = Filtered Array(All Players(All Teams), Current Array Element.SpeedRunMode == True);
		Wait(1, Ignore Condition);
		Loop;
	}
}

規則("Cooldown Reset")
{
	事件
	{
		Ongoing - Each Player;
		All;
		All;
	}

	條件
	{
		Ability Cooldown(Event Player, Button(Ability 1)) != False;
	}

	動作
	{
		If(Hero Of(Event Player) == Hero(毀滅拳王));
			Wait Until(Is On Ground(Event Player), 99999);
			Set Ability Cooldown(Event Player, Button(Ability 1), Min(1, Ability Cooldown(Event Player, Button(Ability 1))));
		End;
	}
}